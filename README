// vue.js
https://kr.vuejs.org/v2/guide/index.html

// script cdn
<script src="https://cdn.jsdelivr.net/npm/vue/dist/vue.js"></script>

// 기본 형태
const app = new Vue({
                el: "#root",
                data: {},
                methods: {},
            });

new Vue : 뷰인스턴스
Vue.component() : 뷰컴포넌트

                        vue 는 kebab-case 를 사용
PascalCase, camelCase, kebab-case

npm i vue
npm i -D vue-loader
npm i -D css-loader
npm i -D webpack
npm i -D webpack-cli
npm i -D webpack-dev-server
npm i -D vue-template-compiler
npm i vue-style-loader
npm i vuex
npm i vue-router

// 기본 템플릿
<template>
    <div></div>
</template>

<script>
export default {
    data() {
        return {};
    },
    methods: {},
};
</script>

<style></style>

// v-on 치환 가능
v-on: = @ 

// .prevent = e.preventDefault(); 로 가능
@submit.prevent = v-on:submit   e.preventDefault();

// v-bind 

// webpack --watch : 자동 빌드

// Vuex
https://vuex.vuejs.org/kr/

// Vuex 기본형태 파일명이 store 일때
import Vue from 'vue';
import Vuex from 'vuex';

Vue.use(Vuex); // this.$store

export default new Vuex.Store({
  state: {}, // vue의 data와 비슷
  getters: {}, // vue의 computed와 비슷
  mutations: {}, // state를 수정할 때 사용. 동기적
  actions: {}, // 비동기를 사용할때, 또는 여러 뮤테이션을 연달아 실행할 때
});

export default , export 2가지 비교하여 알아야함
export 는 { 선언한 이름 } 으로만 가져올 수 있음
export default 는 이름을 변경하여 가져올 수 있음

// Vue router
https://router.vuejs.org/kr/